{"ast":null,"code":"var _jsxFileName = \"T:\\\\reactjs\\\\counters-app\\\\src\\\\components\\\\counter.jsx\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends Component {\n  // state = { value: this.props.counter.value };\n  // renderTags() {\n  //   if (this.state.tags.length === 0) return <p>There are no tags !</p>;\n  //   return (\n  //     <ul>\n  //       {this.state.tags.map((tag) => (\n  //         <li key={tag}>{tag}</li> // cara merender list item diReact\n  //       ))}\n  //     </ul>\n  //   );\n  // }\n  // handleIncrement = (product) => {\n  //   this.setState({ value: this.state.value + 1 });\n  // Syntax diatas adalah cara untuk mengupdate state (this.setstate)\n  // dengan membawa seluruh properti yang dimiliki oleh state tersebut\n  // };\n  render() {\n    //    let classes = this.getBadgeClassess();\n    // Syntax diatas ini dipanggil langusung dengan memasukan syntax\n    // this.getbadgeclassess didalam tag span\n    //console.log(\"props\", this.props);\n    // Syntax diatas ini dipanggil untuk mengecek nilai attribute dari\n    //component counters.jsx yang dimasukkan / tampung kedalam PROPS\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-1\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: this.getBadgeClassess(),\n          children: this.formatCount()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.props.onIncrement(this.props.counter) // cara passing event argument\n          ,\n          className: \"btn btn-secondary btn-sm\",\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.props.onDecrement(this.props.counter) // cara passing event argument\n          ,\n          className: \"btn btn-secondary btn-sm m-2\",\n          disabled: this.props.counter === 0 ? \"disabled\" : \"\",\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.props.onDelete(this.props.counter.id) // Raising sebuah even ke parent component (counters.jsx)\n          // melalui sebuah props onDelete\n          ,\n          className: \"btn btn-danger btn-sm\",\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n  getBadgeClassess() {\n    // baris ini adalah hasil refactoring (encapsulation)\n    let classes = \"badge sm m-2 badge-\";\n    classes += this.props.counter.value == 0 ? \"warning\" : \"primary\";\n    return classes; // Jika nilai count = 0 maka badge akan berwarna kuning,\n    // sebaliknya berwarna biru.\n  }\n\n  formatCount() {\n    const {\n      value: count\n    } = this.props.counter;\n    return count === 0 ? \"Zero\" : count;\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["T:/reactjs/counters-app/src/components/counter.jsx"],"names":["React","Component","Counter","render","getBadgeClassess","formatCount","props","onIncrement","counter","onDecrement","onDelete","id","classes","value","count"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AACA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAC9B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAE,EAAAA,MAAM,GAAG;AACP;AACA;AACA;AAEA;AACA;AACA;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,mBACG,GADH,eAEE;AAAM,UAAA,SAAS,EAAE,KAAKC,gBAAL,EAAjB;AAAA,oBAA2C,KAAKC,WAAL;AAA3C;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACE;AACE,UAAA,OAAO,EAAE,MAAM,KAAKC,KAAL,CAAWC,WAAX,CAAuB,KAAKD,KAAL,CAAWE,OAAlC,CADjB,CAC6D;AAD7D;AAEE,UAAA,SAAS,EAAC,0BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AACE,UAAA,OAAO,EAAE,MAAM,KAAKF,KAAL,CAAWG,WAAX,CAAuB,KAAKH,KAAL,CAAWE,OAAlC,CADjB,CAC6D;AAD7D;AAEE,UAAA,SAAS,EAAC,8BAFZ;AAGE,UAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE,OAAX,KAAuB,CAAvB,GAA2B,UAA3B,GAAwC,EAHpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAcE;AACE,UAAA,OAAO,EAAE,MAAM,KAAKF,KAAL,CAAWI,QAAX,CAAoB,KAAKJ,KAAL,CAAWE,OAAX,CAAmBG,EAAvC,CADjB,CAEE;AACA;AAHF;AAIE,UAAA,SAAS,EAAC,uBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA+BD;;AACDP,EAAAA,gBAAgB,GAAG;AACjB;AACA,QAAIQ,OAAO,GAAG,qBAAd;AACAA,IAAAA,OAAO,IAAI,KAAKN,KAAL,CAAWE,OAAX,CAAmBK,KAAnB,IAA4B,CAA5B,GAAgC,SAAhC,GAA4C,SAAvD;AACA,WAAOD,OAAP,CAJiB,CAKjB;AACA;AACD;;AAEDP,EAAAA,WAAW,GAAG;AACZ,UAAM;AAAEQ,MAAAA,KAAK,EAAEC;AAAT,QAAmB,KAAKR,KAAL,CAAWE,OAApC;AACA,WAAOM,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACD;;AAvE6B;;AA0EhC,eAAeZ,OAAf","sourcesContent":["import React, { Component } from \"react\";\r\nclass Counter extends Component {\r\n  // state = { value: this.props.counter.value };\r\n\r\n  // renderTags() {\r\n  //   if (this.state.tags.length === 0) return <p>There are no tags !</p>;\r\n  //   return (\r\n  //     <ul>\r\n  //       {this.state.tags.map((tag) => (\r\n  //         <li key={tag}>{tag}</li> // cara merender list item diReact\r\n  //       ))}\r\n  //     </ul>\r\n  //   );\r\n  // }\r\n  // handleIncrement = (product) => {\r\n  //   this.setState({ value: this.state.value + 1 });\r\n  // Syntax diatas adalah cara untuk mengupdate state (this.setstate)\r\n  // dengan membawa seluruh properti yang dimiliki oleh state tersebut\r\n  // };\r\n\r\n  render() {\r\n    //    let classes = this.getBadgeClassess();\r\n    // Syntax diatas ini dipanggil langusung dengan memasukan syntax\r\n    // this.getbadgeclassess didalam tag span\r\n\r\n    //console.log(\"props\", this.props);\r\n    // Syntax diatas ini dipanggil untuk mengecek nilai attribute dari\r\n    //component counters.jsx yang dimasukkan / tampung kedalam PROPS\r\n    return (\r\n      <div className=\"Row\">\r\n        <div className=\"col-1\">\r\n          {\" \"}\r\n          <span className={this.getBadgeClassess()}>{this.formatCount()}</span>\r\n        </div>\r\n        <div className=\"col\">\r\n          <button\r\n            onClick={() => this.props.onIncrement(this.props.counter)} // cara passing event argument\r\n            className=\"btn btn-secondary btn-sm\"\r\n          >\r\n            +\r\n          </button>\r\n          <button\r\n            onClick={() => this.props.onDecrement(this.props.counter)} // cara passing event argument\r\n            className=\"btn btn-secondary btn-sm m-2\"\r\n            disabled={this.props.counter === 0 ? \"disabled\" : \"\"}\r\n          >\r\n            -\r\n          </button>\r\n          <button\r\n            onClick={() => this.props.onDelete(this.props.counter.id)}\r\n            // Raising sebuah even ke parent component (counters.jsx)\r\n            // melalui sebuah props onDelete\r\n            className=\"btn btn-danger btn-sm\"\r\n          >\r\n            X\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  getBadgeClassess() {\r\n    // baris ini adalah hasil refactoring (encapsulation)\r\n    let classes = \"badge sm m-2 badge-\";\r\n    classes += this.props.counter.value == 0 ? \"warning\" : \"primary\";\r\n    return classes;\r\n    // Jika nilai count = 0 maka badge akan berwarna kuning,\r\n    // sebaliknya berwarna biru.\r\n  }\r\n\r\n  formatCount() {\r\n    const { value: count } = this.props.counter;\r\n    return count === 0 ? \"Zero\" : count;\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n"]},"metadata":{},"sourceType":"module"}